/* automatically generated by rust-bindgen 0.72.0 */

#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct NanoflannIndex {
    _unused: [u8; 0],
}
unsafe extern "C" {
    pub fn nanoflann_create_index(
        points: *const f32,
        num_points: usize,
        dimensions: usize,
        leaf_max_size: usize,
    ) -> *mut NanoflannIndex;
}
unsafe extern "C" {
    pub fn nanoflann_destroy_index(index: *mut NanoflannIndex);
}
unsafe extern "C" {
    pub fn nanoflann_knn_search(
        index: *const NanoflannIndex,
        query_point: *const f32,
        k: usize,
        out_indices: *mut usize,
        out_distances_squared: *mut f32,
    ) -> usize;
}
unsafe extern "C" {
    pub fn nanoflann_radius_search(
        index: *const NanoflannIndex,
        query_point: *const f32,
        radius_squared: f32,
        out_indices: *mut usize,
        out_distances_squared: *mut f32,
        max_results: usize,
    ) -> usize;
}
unsafe extern "C" {
    pub fn nanoflann_update_points(
        index: *mut NanoflannIndex,
        points: *const f32,
        num_points: usize,
    );
}
unsafe extern "C" {
    pub fn nanoflann_memory_usage(index: *const NanoflannIndex) -> usize;
}
unsafe extern "C" {
    pub fn nanoflann_point_count(index: *const NanoflannIndex) -> usize;
}
unsafe extern "C" {
    pub fn nanoflann_dimensions(index: *const NanoflannIndex) -> usize;
}
